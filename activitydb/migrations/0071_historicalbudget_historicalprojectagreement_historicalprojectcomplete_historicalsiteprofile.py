# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from decimal import Decimal
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('activitydb', '0070_tolauser_tables_api_token'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalBudget',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('contributor', models.CharField(max_length=135, null=True, blank=True)),
                ('description_of_contribution', models.CharField(max_length=255, null=True, blank=True)),
                ('proposed_value', models.IntegerField(default=0, null=True, blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('agreement', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.ProjectAgreement', null=True)),
                ('complete', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.ProjectComplete', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical budget',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProjectAgreement',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('date_of_request', models.DateTimeField(null=True, verbose_name='Date of Request', blank=True)),
                ('project_name', models.CharField(help_text='Please be specific in your name.  Consider that your Project Name includes WHO, WHAT, WHERE, HOW', max_length=255, verbose_name='Project Name')),
                ('project_activity', models.CharField(help_text='This should come directly from the activities listed in the Logframe', max_length=255, null=True, verbose_name='Project Activity', blank=True)),
                ('project_description', models.TextField(null=True, verbose_name='Project Description', blank=True)),
                ('community_rep', models.CharField(max_length=255, null=True, verbose_name='Community Representative', blank=True)),
                ('community_rep_contact', models.CharField(help_text='Can have mulitple contact numbers', max_length=255, null=True, verbose_name='Community Representative Contact', blank=True)),
                ('community_mobilizer', models.CharField(max_length=255, null=True, verbose_name='Community Mobilizer', blank=True)),
                ('community_mobilizer_contact', models.CharField(max_length=255, null=True, verbose_name='Community Mobilizer Contact Number', blank=True)),
                ('community_proposal', models.TextField(max_length=100, null=True, verbose_name='Community Proposal', blank=True)),
                ('has_rej_letter', models.BooleanField(default=False, help_text='If yes attach copy', verbose_name='If Rejected: Rejection Letter Sent?')),
                ('activity_code', models.CharField(max_length=255, null=True, verbose_name='Activity Code', blank=True)),
                ('cod_num', models.CharField(max_length=255, null=True, verbose_name='Project COD #', blank=True)),
                ('project_design', models.CharField(max_length=255, null=True, verbose_name='Activity design for', blank=True)),
                ('account_code', models.CharField(max_length=255, null=True, verbose_name='Account Code', blank=True)),
                ('lin_code', models.CharField(max_length=255, null=True, verbose_name='LIN Code', blank=True)),
                ('staff_responsible', models.CharField(max_length=255, null=True, verbose_name='Staff Responsible', blank=True)),
                ('partners', models.BooleanField(default=0, verbose_name='Are there partners involved?')),
                ('name_of_partners', models.CharField(max_length=255, null=True, verbose_name='Name of Partners', blank=True)),
                ('effect_or_impact', models.TextField(null=True, verbose_name='What is the anticipated Outcome or Goal?', blank=True)),
                ('expected_start_date', models.DateTimeField(null=True, verbose_name='Expected starting date', blank=True)),
                ('expected_end_date', models.DateTimeField(null=True, verbose_name='Expected ending date', blank=True)),
                ('expected_duration', models.CharField(help_text='[MONTHS]/[DAYS]', max_length=255, null=True, verbose_name='Expected duration', blank=True)),
                ('beneficiary_type', models.CharField(help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries', blank=True)),
                ('estimated_num_direct_beneficiaries', models.CharField(help_text="Please provide achievable estimates as we will use these as our 'Targets'", max_length=255, null=True, verbose_name='Estimated number of direct beneficiaries', blank=True)),
                ('average_household_size', models.CharField(help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size', blank=True)),
                ('estimated_num_indirect_beneficiaries', models.CharField(help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries', blank=True)),
                ('total_estimated_budget', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, blank=True, help_text='In USD', verbose_name='Total Project Budget')),
                ('mc_estimated_budget', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, blank=True, help_text='In USD', verbose_name='Organizations portion of Project Budget')),
                ('local_total_estimated_budget', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, blank=True, help_text='In Local Currency', verbose_name='Estimated Total in Local Currency')),
                ('local_mc_estimated_budget', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, blank=True, help_text='Total portion of estimate for your agency', verbose_name='Estimated Organization Total in Local Currency')),
                ('exchange_rate', models.CharField(help_text='Local Currency exchange rate to USD', max_length=255, null=True, blank=True)),
                ('exchange_rate_date', models.DateField(help_text='Date of exchange rate', null=True, blank=True)),
                ('estimate_male_trained', models.IntegerField(null=True, verbose_name='Estimated # of Male Trained', blank=True)),
                ('estimate_female_trained', models.IntegerField(null=True, verbose_name='Estimated # of Female Trained', blank=True)),
                ('estimate_total_trained', models.IntegerField(null=True, verbose_name='Estimated Total # Trained', blank=True)),
                ('estimate_trainings', models.IntegerField(null=True, verbose_name='Estimated # of Trainings Conducted', blank=True)),
                ('distribution_type', models.CharField(max_length='255', null=True, verbose_name='Type of Items Distributed', blank=True)),
                ('distribution_uom', models.CharField(max_length='255', null=True, verbose_name='Unit of Measure', blank=True)),
                ('distribution_estimate', models.CharField(max_length='255', null=True, verbose_name='Estimated # of Items Distributed', blank=True)),
                ('cfw_estimate_male', models.IntegerField(null=True, verbose_name='Estimated # of Male Laborers', blank=True)),
                ('cfw_estimate_female', models.IntegerField(null=True, verbose_name='Estimated # of Female Laborers', blank=True)),
                ('cfw_estimate_total', models.IntegerField(null=True, verbose_name='Estimated Total # of Laborers', blank=True)),
                ('cfw_estimate_project_days', models.IntegerField(null=True, verbose_name='Estimated # of Project Days', blank=True)),
                ('cfw_estimate_person_days', models.IntegerField(null=True, verbose_name='Estimated # of Person Days', blank=True)),
                ('cfw_estimate_cost_materials', models.CharField(max_length='255', null=True, verbose_name='Estimated Total Cost of Materials', blank=True)),
                ('cfw_estimate_wages_budgeted', models.CharField(max_length='255', null=True, verbose_name='Estimated Wages Budgeted', blank=True)),
                ('estimation_date', models.DateTimeField(null=True, blank=True)),
                ('estimated_by_date', models.DateTimeField(null=True, verbose_name='Date Originated', blank=True)),
                ('checked_by_date', models.DateTimeField(null=True, verbose_name='Date Checked', blank=True)),
                ('reviewed_by_date', models.DateTimeField(null=True, verbose_name='Date Verified', blank=True)),
                ('finance_reviewed_by_date', models.DateTimeField(null=True, verbose_name='Date Reviewed by Finance', blank=True)),
                ('me_reviewed_by_date', models.DateTimeField(null=True, verbose_name='Date Reviewed by M&E', blank=True)),
                ('approval', models.CharField(default='in progress', max_length=255, null=True, verbose_name='Approval Status', blank=True)),
                ('approved_by_date', models.DateTimeField(null=True, verbose_name='Date Approved', blank=True)),
                ('approval_remarks', models.CharField(max_length=255, null=True, verbose_name='Approval Remarks', blank=True)),
                ('justification_background', models.TextField(null=True, verbose_name='General Background and Problem Statement', blank=True)),
                ('risks_assumptions', models.TextField(null=True, verbose_name='Risks and Assumptions', blank=True)),
                ('justification_description_community_selection', models.TextField(null=True, verbose_name='Description of Stakeholder Selection Criteria', blank=True)),
                ('description_of_project_activities', models.TextField(null=True, blank=True)),
                ('description_of_government_involvement', models.TextField(null=True, blank=True)),
                ('description_of_community_involvement', models.TextField(null=True, blank=True)),
                ('community_project_description', models.TextField(help_text='Description must describe how the Community Proposal meets the project criteria', null=True, verbose_name='Describe the project you would like the program to consider', blank=True)),
                ('create_date', models.DateTimeField(null=True, verbose_name='Date Created', blank=True)),
                ('edit_date', models.DateTimeField(null=True, verbose_name='Last Edit Date', blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('approval_submitted_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('approved_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('checked_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('dashboard_name', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.CustomDashboard', null=True)),
                ('estimated_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('finance_reviewed_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('me_reviewed_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('office', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.Office', null=True)),
                ('program', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.Program', null=True)),
                ('project_type', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.ProjectType', null=True)),
                ('project_type_other', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.ProjectTypeOther', null=True)),
                ('reviewed_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('sector', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.Sector', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical project agreement',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProjectComplete',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('activity_code', models.CharField(max_length=255, null=True, verbose_name='Activity Code', blank=True)),
                ('project_name', models.CharField(max_length=255, null=True, verbose_name='Project Name', blank=True)),
                ('project_activity', models.CharField(max_length=255, null=True, verbose_name='Project Activity', blank=True)),
                ('expected_start_date', models.DateTimeField(help_text='Imported Project Agreement', null=True, blank=True)),
                ('expected_end_date', models.DateTimeField(help_text='Imported Project Agreement', null=True, blank=True)),
                ('expected_duration', models.CharField(help_text='Imported from Project Agreement', max_length=255, null=True, verbose_name='Expected Duration', blank=True)),
                ('actual_start_date', models.DateTimeField(help_text='Imported from Project Agreement', null=True, blank=True)),
                ('actual_end_date', models.DateTimeField(null=True, blank=True)),
                ('actual_duration', models.CharField(max_length=255, null=True, blank=True)),
                ('on_time', models.BooleanField(default=None)),
                ('no_explanation', models.TextField(null=True, verbose_name='If not on time explain delay', blank=True)),
                ('account_code', models.CharField(max_length=255, null=True, verbose_name='Account Code', blank=True)),
                ('lin_code', models.CharField(max_length=255, null=True, verbose_name='LIN Sub Code', blank=True)),
                ('estimated_budget', models.DecimalField(default=Decimal('0.00'), verbose_name='Estimated Budget', max_digits=12, decimal_places=2, blank=True)),
                ('actual_budget', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, blank=True, help_text='What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', verbose_name='Actual Cost')),
                ('actual_cost_date', models.DateTimeField(null=True, blank=True)),
                ('budget_variance', models.CharField(max_length=255, null=True, verbose_name='Budget versus Actual variance', blank=True)),
                ('explanation_of_variance', models.CharField(max_length=255, null=True, verbose_name='Explanation of variance', blank=True)),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, blank=True, help_text='In USD', verbose_name='Estimated Budget for Organization')),
                ('agency_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, blank=True, help_text='In USD', verbose_name='Actual Cost for Organization')),
                ('local_total_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, blank=True, help_text='In Local Currency', verbose_name='Actual Cost')),
                ('local_agency_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, blank=True, help_text='In Local Currency', verbose_name='Actual Cost for Organization')),
                ('exchange_rate', models.CharField(help_text='Local Currency exchange rate to USD', max_length=255, null=True, blank=True)),
                ('exchange_rate_date', models.DateField(help_text='Date of exchange rate', null=True, blank=True)),
                ('beneficiary_type', models.CharField(help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries', blank=True)),
                ('average_household_size', models.CharField(help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size', blank=True)),
                ('indirect_beneficiaries', models.CharField(help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries', blank=True)),
                ('direct_beneficiaries', models.CharField(max_length=255, null=True, verbose_name='Actual Direct Beneficiaries', blank=True)),
                ('jobs_created', models.CharField(max_length=255, null=True, verbose_name='Number of Jobs Created', blank=True)),
                ('jobs_part_time', models.CharField(max_length=255, null=True, verbose_name='Part Time Jobs', blank=True)),
                ('jobs_full_time', models.CharField(max_length=255, null=True, verbose_name='Full Time Jobs', blank=True)),
                ('progress_against_targets', models.IntegerField(null=True, verbose_name='Progress against Targets (%)', blank=True)),
                ('government_involvement', models.CharField(max_length=255, null=True, verbose_name='Government Involvement', blank=True)),
                ('community_involvement', models.CharField(max_length=255, null=True, verbose_name='Community Involvement', blank=True)),
                ('community_handover', models.BooleanField(default=None, help_text='Check box if it was completed', verbose_name='CommunityHandover/Sustainability Maintenance Plan')),
                ('capacity_built', models.TextField(max_length=755, null=True, verbose_name='Describe how sustainability was ensured for this project?', blank=True)),
                ('quality_assured', models.TextField(max_length=755, null=True, verbose_name='How was quality assured for this project', blank=True)),
                ('issues_and_challenges', models.TextField(null=True, verbose_name='List any issues or challenges faced (include reasons for delays)', blank=True)),
                ('lessons_learned', models.TextField(null=True, verbose_name='Lessons learned', blank=True)),
                ('approval', models.CharField(default='in progress', max_length=255, null=True, verbose_name='Approval Status', blank=True)),
                ('approval_remarks', models.CharField(max_length=255, null=True, verbose_name='Approval Remarks', blank=True)),
                ('create_date', models.DateTimeField(null=True, verbose_name='Date Created', blank=True)),
                ('edit_date', models.DateTimeField(null=True, verbose_name='Last Edit Date', blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('approval_submitted_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('approved_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('checked_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('dashboard_name', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.CustomDashboard', null=True)),
                ('estimated_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('office', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.Office', null=True)),
                ('program', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.Program', null=True)),
                ('project_agreement', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.ProjectAgreement', null=True)),
                ('project_type', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.ProjectType', null=True)),
                ('reviewed_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('sector', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.Sector', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical project complete',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSiteProfile',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=255, verbose_name='Site Name')),
                ('contact_leader', models.CharField(max_length=255, null=True, verbose_name='Contact Name', blank=True)),
                ('date_of_firstcontact', models.DateTimeField(null=True, blank=True)),
                ('contact_number', models.CharField(max_length=255, null=True, verbose_name='Contact Number', blank=True)),
                ('num_members', models.CharField(max_length=255, null=True, verbose_name='Number of Members', blank=True)),
                ('info_source', models.CharField(max_length=255, null=True, verbose_name='Data Source', blank=True)),
                ('total_num_households', models.IntegerField(null=True, verbose_name='Total # Households', blank=True)),
                ('avg_household_size', models.DecimalField(default=Decimal('0.00'), verbose_name='Average Household Size', max_digits=25, decimal_places=14)),
                ('male_0_14', models.IntegerField(null=True, verbose_name='Male age 0-14', blank=True)),
                ('female_0_14', models.IntegerField(null=True, verbose_name='Female age 0-14', blank=True)),
                ('male_15_24', models.IntegerField(null=True, verbose_name='Male age 15-24 ', blank=True)),
                ('female_15_24', models.IntegerField(null=True, verbose_name='Female age 15-24', blank=True)),
                ('male_25_59', models.IntegerField(null=True, verbose_name='Male age 25-59', blank=True)),
                ('female_25_59', models.IntegerField(null=True, verbose_name='Female age 25-59', blank=True)),
                ('male_over_60', models.IntegerField(null=True, verbose_name='Male Over 60', blank=True)),
                ('female_over_60', models.IntegerField(null=True, verbose_name='Female Over 60', blank=True)),
                ('total_population', models.IntegerField(null=True, blank=True)),
                ('total_male', models.IntegerField(null=True, blank=True)),
                ('total_female', models.IntegerField(null=True, blank=True)),
                ('total_land', models.IntegerField(help_text='In hectares/jeribs', null=True, verbose_name='Total Land', blank=True)),
                ('total_agricultural_land', models.IntegerField(help_text='In hectares/jeribs', null=True, verbose_name='Total Agricultural Land', blank=True)),
                ('total_rainfed_land', models.IntegerField(help_text='In hectares/jeribs', null=True, verbose_name='Total Rain-fed Land', blank=True)),
                ('total_horticultural_land', models.IntegerField(help_text='In hectares/jeribs', null=True, verbose_name='Total Horticultural Land', blank=True)),
                ('total_literate_peoples', models.IntegerField(null=True, verbose_name='Total Literate People', blank=True)),
                ('literate_males', models.IntegerField(help_text='%', null=True, verbose_name='% of Literate Males', blank=True)),
                ('literate_females', models.IntegerField(help_text='%', null=True, verbose_name='% of Literate Females', blank=True)),
                ('literacy_rate', models.IntegerField(help_text='%', null=True, verbose_name='Literacy Rate (%)', blank=True)),
                ('populations_owning_land', models.IntegerField(help_text='(%)', null=True, verbose_name='Households Owning Land', blank=True)),
                ('avg_landholding_size', models.DecimalField(default=Decimal('0.00'), help_text='In hectares/jeribs', verbose_name='Average Landholding Size', max_digits=25, decimal_places=14)),
                ('households_owning_livestock', models.IntegerField(help_text='(%)', null=True, verbose_name='Households Owning Livestock', blank=True)),
                ('animal_type', models.CharField(help_text='List Animal Types', max_length=255, null=True, verbose_name='Animal Types', blank=True)),
                ('village', models.CharField(max_length=255, null=True, verbose_name='Administrative Level 4', blank=True)),
                ('latitude', models.DecimalField(default=Decimal('0.00'), verbose_name='Latitude (Decimal Coordinates)', max_digits=25, decimal_places=16)),
                ('longitude', models.DecimalField(default=Decimal('0.00'), verbose_name='Longitude (Decimal Coordinates)', max_digits=25, decimal_places=16)),
                ('approval', models.CharField(default='in progress', max_length=255, null=True, verbose_name='Approval', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('admin_level_three', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.AdminLevelThree', null=True)),
                ('approved_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('classify_land', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.LandType', null=True)),
                ('country', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.Country', null=True)),
                ('district', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.District', null=True)),
                ('filled_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('location_verified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.TolaUser', null=True)),
                ('office', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.Office', null=True)),
                ('province', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.Province', null=True)),
                ('type', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='activitydb.ProfileType', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical site profile',
            },
        ),
    ]
