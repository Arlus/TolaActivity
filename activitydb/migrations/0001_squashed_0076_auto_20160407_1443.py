# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-11 23:08
from __future__ import unicode_literals

import datetime
from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    replaces = [(b'activitydb', '0001_initial'), (b'activitydb', '0002_auto_20150622_1335'), (b'activitydb', '0003_auto_20150622_1336'), (b'activitydb', '0004_auto_20150622_1501'), (b'activitydb', '0005_auto_20150623_1009'), (b'activitydb', '0006_auto_20150625_1636'), (b'activitydb', '0007_auto_20150629_1512'), (b'activitydb', '0008_projectagreement_community_proposal'), (b'activitydb', '0009_auto_20150629_1831'), (b'activitydb', '0010_auto_20150629_1832'), (b'activitydb', '0011_auto_20150630_0824'), (b'activitydb', '0012_auto_20150630_1607'), (b'activitydb', '0013_auto_20150701_1557'), (b'activitydb', '0014_auto_20150803_1539'), (b'activitydb', '0015_auto_20150924_0646'), (b'activitydb', '0016_auto_20150924_1417'), (b'activitydb', '0017_auto_20150925_1040'), (b'activitydb', '0018_auto_20150925_1204'), (b'activitydb', '0019_projectagreement_community_project_description'), (b'activitydb', '0020_auto_20151014_0557'), (b'activitydb', '0021_adminlevelthree'), (b'activitydb', '0022_documentation_program'), (b'activitydb', '0023_auto_20151022_0500'), (b'activitydb', '0024_auto_20151024_0040'), (b'activitydb', '0025_auto_20151024_0221'), (b'activitydb', '0026_auto_20151026_0133'), (b'activitydb', '0027_auto_20151027_0026'), (b'activitydb', '0028_auto_20151027_0037'), (b'activitydb', '0029_auto_20151027_0041'), (b'activitydb', '0030_auto_20151027_0049'), (b'activitydb', '0031_checklist_name'), (b'activitydb', '0032_auto_20151027_0320'), (b'activitydb', '0027_auto_20151027_1406'), (b'activitydb', '0033_merge'), (b'activitydb', '0034_auto_20151027_1851'), (b'activitydb', '0035_auto_20151028_0057'), (b'activitydb', '0036_auto_20151028_1519'), (b'activitydb', '0037_auto_20151028_1631'), (b'activitydb', '0038_auto_20151029_0616'), (b'activitydb', '0039_auto_20151029_0628'), (b'activitydb', '0040_auto_20151029_0643'), (b'activitydb', '0041_auto_20151029_0653'), (b'activitydb', '0042_auto_20151030_1237'), (b'activitydb', '0043_auto_20151102_1628'), (b'activitydb', '0044_auto_20151109_1135'), (b'activitydb', '0045_auto_20151109_1529'), (b'activitydb', '0044_siteprofile_approval'), (b'activitydb', '0046_merge'), (b'activitydb', '0047_auto_20151119_1131'), (b'activitydb', '0048_customdashboard_dashboard_description'), (b'activitydb', '0048_auto_20151204_1354'), (b'activitydb', '0049_merge'), (b'activitydb', '0050_auto_20151208_1803'), (b'activitydb', '0051_auto_20151209_1349'), (b'activitydb', '0052_auto_20151210_1128'), (b'activitydb', '0053_auto_20151211_1615'), (b'activitydb', '0054_auto_20151215_1417'), (b'activitydb', '0055_auto_20151216_1555'), (b'activitydb', '0056_program_budget_check'), (b'activitydb', '0057_auto_20151228_1328'), (b'activitydb', '0058_auto_20160107_1525'), (b'activitydb', '0059_projectagreement_risks_assumptions'), (b'activitydb', '0060_auto_20160125_1752'), (b'activitydb', '0061_auto_20160202_0706'), (b'activitydb', '0062_auto_20160206_1155'), (b'activitydb', '0063_auto_20160211_1645'), (b'activitydb', '0064_auto_20160211_1647'), (b'activitydb', '0065_auto_20160212_1545'), (b'activitydb', '0066_auto_20160216_1549'), (b'activitydb', '0067_auto_20160226_1251'), (b'activitydb', '0068_auto_20160308_0548'), (b'activitydb', '0069_program_user_access'), (b'activitydb', '0070_tolauser_tables_api_token'), (b'activitydb', '0071_historicalbudget_historicalprojectagreement_historicalprojectcomplete_historicalsiteprofile'), (b'activitydb', '0072_auto_20160315_1141'), (b'activitydb', '0073_auto_20160317_1329'), (b'activitydb', '0074_auto_20160331_1012'), (b'activitydb', '0075_auto_20160406_0943'), (b'activitydb', '0076_auto_20160407_1443')]

    initial = True

    dependencies = [
        ('sites', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0006_require_contenttypes_0002'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_limit', models.IntegerField(blank=True, null=True)),
                ('fund', models.IntegerField(blank=True, null=True, verbose_name=b'Fund')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('approval_user', models.ForeignKey(blank=True, help_text=b'User with Approval Authority', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auth_approving', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('approval_user',),
                'verbose_name_plural': 'Approval Authority',
            },
        ),
        migrations.CreateModel(
            name='Benchmarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent_complete', models.IntegerField(blank=True, null=True, verbose_name=b'% complete')),
                ('percent_cumulative', models.IntegerField(blank=True, null=True, verbose_name=b'% cumulative completion')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name=b'Description')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('description',),
                'verbose_name_plural': 'Benchmarks',
            },
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficiary_name', models.CharField(blank=True, max_length=255, null=True)),
                ('father_name', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('signature', models.BooleanField(default=True)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.SiteProfile')),
            ],
            options={
                'ordering': ('beneficiary_name',),
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contributor', models.CharField(blank=True, max_length=135, null=True)),
                ('description_of_contribution', models.CharField(blank=True, max_length=255, null=True)),
                ('proposed_value', models.IntegerField(blank=True, default=0, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('contributor',),
            },
        ),
        migrations.CreateModel(
            name='Capacity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Capacity')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('capacity',),
                'verbose_name_plural': 'Capacity',
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Profile Name')),
                ('existing_village', models.BooleanField(default=b'False', verbose_name=b'Is There an existing shura or CDC?')),
                ('existing_village_descr', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'If Yes please describe')),
                ('community_leader', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Contact Name')),
                ('date_of_firstcontact', models.DateTimeField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Head of Shura/Institution')),
                ('num_members', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Number of Members')),
                ('distance_district_capital', models.IntegerField(blank=True, help_text=b'In KM', null=True, verbose_name=b'Distance from District Capital')),
                ('distance_site_camp', models.IntegerField(blank=True, help_text=b'In KM', null=True, verbose_name=b'Distance from Site Camp')),
                ('distance_field_office', models.IntegerField(blank=True, help_text=b'In KM', null=True, verbose_name=b'Distance from MC Field Office')),
                ('total_num_households', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Total # Households')),
                ('avg_household_size', models.DecimalField(blank=True, decimal_places=14, max_digits=25, null=True, verbose_name=b'Average Household Size')),
                ('male_0_14', models.IntegerField(blank=True, null=True, verbose_name=b'Male age 0-14')),
                ('female_0_14', models.IntegerField(blank=True, null=True, verbose_name=b'Female age 0-14')),
                ('male_15_24', models.IntegerField(blank=True, null=True, verbose_name=b'Male age 15-24 ')),
                ('female_15_24', models.IntegerField(blank=True, null=True, verbose_name=b'Female age 15-24')),
                ('male_25_59', models.IntegerField(blank=True, null=True, verbose_name=b'Male age 25-59')),
                ('female_25_59', models.IntegerField(blank=True, null=True, verbose_name=b'Female age 25-59')),
                ('male_over_60', models.IntegerField(blank=True, null=True, verbose_name=b'Male Over 60')),
                ('female_over_60', models.IntegerField(blank=True, null=True, verbose_name=b'Female Over 60')),
                ('total_population', models.IntegerField(blank=True, null=True)),
                ('total_land', models.IntegerField(blank=True, help_text=b'In hectares/jeribs', null=True, verbose_name=b'Total Land')),
                ('total_agricultural_land', models.IntegerField(blank=True, help_text=b'In hectares/jeribs', null=True, verbose_name=b'Total Agricultural Land')),
                ('total_rainfed_land', models.IntegerField(blank=True, help_text=b'In hectares/jeribs', null=True, verbose_name=b'Total Rain-fed Land')),
                ('total_horticultural_land', models.IntegerField(blank=True, help_text=b'In hectares/jeribs', null=True, verbose_name=b'Total Horticultural Land')),
                ('total_literate_peoples', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Total Literate People')),
                ('literate_males', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Number of Literate Males')),
                ('literate_females', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Number of Literate Females')),
                ('literacy_rate', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Literacy Rate (%)')),
                ('populations_owning_land', models.IntegerField(blank=True, help_text=b'(%)', null=True, verbose_name=b'Population Owning Land')),
                ('avg_landholding_size', models.IntegerField(blank=True, help_text=b'In hectares/jeribs', null=True, verbose_name=b'Average Landholding Size')),
                ('populations_owning_livestock', models.IntegerField(blank=True, help_text=b'(%)', null=True, verbose_name=b'Population Owning Livestock')),
                ('animal_type', models.CharField(blank=True, help_text=b'See Guide for Calculation', max_length=255, null=True, verbose_name=b'Animal Types')),
                ('num_animals_population_owning', models.CharField(blank=True, help_text=b'What?', max_length=255, null=True)),
                ('village', models.CharField(blank=True, help_text=b'', max_length=255, null=True, verbose_name=b'Village')),
                ('latitude', models.DecimalField(blank=True, decimal_places=14, max_digits=25, null=True, verbose_name=b'Latitude (Coordinates)')),
                ('longitude', models.DecimalField(blank=True, decimal_places=14, max_digits=25, null=True, verbose_name=b'Longitude (Coordinates)')),
                ('approval', models.CharField(blank=True, default=b'in progress', max_length=255, null=True, verbose_name=b'Approval')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text=b'This is the Provincial Line Manager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comm_approving', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'Communities',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=255, verbose_name=b'Country Name')),
                ('code', models.CharField(blank=True, max_length=4, verbose_name=b'2 Letter Country Code')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name=b'Description/Notes')),
                ('latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Latitude')),
                ('longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Longitude')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('country',),
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name=b'District Name')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Documentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=135, null=True, verbose_name=b'Name of Document')),
                ('url', models.CharField(blank=True, max_length=135, null=True, verbose_name=b'URL (Link to document or document repository)')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('file_field', models.FileField(blank=True, null=True, upload_to=b'uploads')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectProposal')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'Documentation',
            },
        ),
        migrations.CreateModel(
            name='DocumentationApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('documentation', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='Evaluate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluate', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'How will you evaluate the outcome or impact of the project?')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('evaluate',),
                'verbose_name_plural': 'Evaluate',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('page', models.CharField(max_length=135)),
                ('severity', models.CharField(max_length=135)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.TolaUser')),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='MergeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_column', models.CharField(blank=True, max_length=255)),
                ('to_column', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsible_person', models.CharField(blank=True, max_length=25, null=True, verbose_name=b'Person Responsible')),
                ('frequency', models.CharField(blank=True, max_length=25, null=True, verbose_name=b'Frequency')),
                ('type', models.TextField(blank=True, null=True, verbose_name=b'Type')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('type',),
                'verbose_name_plural': 'Monitors',
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name=b'Office Name')),
                ('code', models.CharField(blank=True, max_length=255, verbose_name=b'Office Code')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProfileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.CharField(blank=True, max_length=255, verbose_name='Profile Type')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('profile',),
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gaitid', models.CharField(blank=True, max_length=255, unique=True, verbose_name=b'GAITID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name=b'Program Name')),
                ('funding_status', models.CharField(blank=True, max_length=255, verbose_name=b'Funding Status')),
                ('cost_center', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Fund Code')),
                ('description', models.CharField(blank=True, max_length=765, null=True, verbose_name=b'Program Description')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('country', models.ManyToManyField(to=b'activitydb.Country')),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='ProgramDashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_proposal_count', models.IntegerField(blank=True, null=True)),
                ('project_proposal_count_approved', models.IntegerField(blank=True, null=True)),
                ('project_agreement_count', models.IntegerField(blank=True, null=True)),
                ('project_agreement_count_approved', models.IntegerField(blank=True, null=True)),
                ('project_completion_count', models.IntegerField(blank=True, null=True)),
                ('project_completion_count_approved', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Program')),
            ],
            options={
                'ordering': ('program',),
            },
        ),
        migrations.CreateModel(
            name='ProjectAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_request', models.DateTimeField(blank=True, null=True, verbose_name=b'Date of Request')),
                ('project_name', models.CharField(blank=True, help_text=b'Please be specific in your name.  Consider that your Project Name includes WHO, WHAT, WHERE, HOW', max_length=255, null=True, verbose_name=b'Project Name')),
                ('project_activity', models.CharField(blank=True, help_text=b'This should come directly from the activities listed in the Logframe', max_length=255, null=True, verbose_name=b'Project Activity')),
                ('project_description', models.TextField(blank=True, help_text=b'Description must meet the Criteria.  Will translate description into three languages: English, Dari and Pashto)', null=True, verbose_name=b'Project Description')),
                ('activity_code', models.CharField(blank=True, help_text=b'Please request Activity Code from Kabul MEL', max_length=255, null=True, verbose_name=b'Activity Code')),
                ('cod_num', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Project COD #')),
                ('external_stakeholder_list', models.FileField(blank=True, help_text=b'Please refer to PM@MC Section 01: Identification and Design under 1.1', null=True, upload_to=b'uploads', verbose_name=b'External stakeholder list')),
                ('project_design', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Activity design for')),
                ('account_code', models.CharField(blank=True, help_text=b'optional - request from finance', max_length=255, null=True, verbose_name=b'Account Code')),
                ('lin_code', models.CharField(blank=True, help_text=b'optional - request from finance', max_length=255, null=True, verbose_name=b'LIN Sub Code')),
                ('staff_responsible', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'MC Staff Responsible')),
                ('partners', models.BooleanField(default=0, verbose_name=b'Are there partners involved?')),
                ('name_of_partners', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Name of Partners')),
                ('program_objectives', models.TextField(blank=True, null=True, verbose_name=b'What Program Objectives does this help fulfill?')),
                ('mc_objectives', models.TextField(blank=True, null=True, verbose_name=b'What MC strategic Objectives does this help fulfill?')),
                ('effect_or_impact', models.TextField(blank=True, null=True, verbose_name=b'What is the anticipated effect of impact of this project?')),
                ('expected_start_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Expected starting date')),
                ('expected_end_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Expected ending date')),
                ('expected_duration', models.CharField(blank=True, help_text=b'[MONTHS]/[DAYS]', max_length=255, null=True, verbose_name=b'Expected duration')),
                ('beneficiary_type', models.CharField(blank=True, help_text=b'i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name=b'Type of direct beneficiaries')),
                ('estimated_num_direct_beneficiaries', models.CharField(blank=True, help_text=b"Please provide achievable estimates as we will use these as are 'Targets'", max_length=255, null=True, verbose_name=b'Estimated number of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text=b'Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name=b'Average Household Size')),
                ('estimated_num_indirect_beneficiaries', models.CharField(blank=True, help_text=b'This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name=b'Estimated Number of indirect beneficiaries')),
                ('total_estimated_budget', models.CharField(blank=True, help_text=b'In USD', max_length=255, null=True)),
                ('mc_estimated_budget', models.CharField(blank=True, help_text=b'In USD', max_length=255, null=True)),
                ('estimation_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_by_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Date Estimated')),
                ('checked_by_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Date Checked')),
                ('reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Date Reviewed')),
                ('finance_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Date Reviewed by Finance')),
                ('me_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Date Reviewed by M&E')),
                ('capacity', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Capacity')),
                ('evaluate', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'How will you evaluate the outcome or impact of the project?')),
                ('approval', models.CharField(blank=True, default=b'in progress', max_length=255, null=True, verbose_name=b'Status')),
                ('approved_by_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Date Approved')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Approval Remarks')),
                ('justification_background', models.TextField(blank=True, null=True, verbose_name=b'General background and problem statement')),
                ('justification_description_community_selection', models.TextField(blank=True, null=True, verbose_name=b'Description of community selection criteria')),
                ('description_of_project_activities', models.TextField(blank=True, null=True)),
                ('description_of_government_involvement', models.TextField(blank=True, null=True)),
                ('description_of_community_involvement', models.TextField(blank=True, null=True)),
                ('documentation_government_approval', models.FileField(blank=True, null=True, upload_to=b'uploads', verbose_name=b'Upload Government Documentation of Approval')),
                ('documentation_community_approval', models.FileField(blank=True, null=True, upload_to=b'uploads', verbose_name=b'Upload Community Documentation of Approval')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Last Edit Date')),
                ('approval_submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_by_agreement', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approving_agreement', to=settings.AUTH_USER_MODEL)),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checking', to=settings.AUTH_USER_MODEL)),
                ('community', models.ManyToManyField(blank=True, to=b'activitydb.Community')),
                ('estimated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estimating', to=settings.AUTH_USER_MODEL)),
                ('finance_reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finance_reviewing', to=settings.AUTH_USER_MODEL)),
                ('me_reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing_me', to=settings.AUTH_USER_MODEL)),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Office')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agreement', to='activitydb.Program')),
            ],
            options={
                'ordering': ('create_date',),
                'permissions': (('can_approve', 'Can approve proposal'),),
            },
        ),
        migrations.CreateModel(
            name='ProjectComplete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Activity Code')),
                ('project_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Project Activity')),
                ('expected_start_date', models.DateTimeField(blank=True, help_text=b'Comes from Form-04 Project Agreement', null=True)),
                ('expected_end_date', models.DateTimeField(blank=True, help_text=b'Comes from Form-04 Project Agreement', null=True)),
                ('expected_duration', models.CharField(blank=True, help_text=b'Comes from Form-04 Project Agreement', max_length=255, null=True, verbose_name=b'Expected Duration')),
                ('actual_start_date', models.DateTimeField(blank=True, help_text=b'Comes from Form-04 Project Agreement', null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('on_time', models.BooleanField(default=None)),
                ('no_explanation', models.TextField(blank=True, null=True, verbose_name=b'If not on time explain delay')),
                ('estimated_budget', models.CharField(blank=True, help_text=b'Comes from Form-04 Project Agreement', max_length=255, null=True, verbose_name=b'Estimated Budget')),
                ('actual_budget', models.CharField(blank=True, help_text=b'What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', max_length=255, null=True, verbose_name=b'Actual Budget')),
                ('budget_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Budget Variance')),
                ('explanation_of_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Explanation of variance')),
                ('direct_beneficiaries', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Actual Direct Beneficiaries')),
                ('jobs_created', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Number of Jobs Created')),
                ('jobs_part_time', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Part Time Jobs')),
                ('jobs_full_time', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Full Time Jobs')),
                ('government_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Government Involvement')),
                ('capacity_built', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'What capacity was built to ensure sustainability?')),
                ('issues_and_challenges', models.TextField(blank=True, null=True, verbose_name=b'List any issues or challenges faced (include reasons for delays)')),
                ('lessons_learned', models.TextField(blank=True, null=True, verbose_name=b'Lessons learned')),
                ('approval', models.CharField(blank=True, default=b'in progress', max_length=255, null=True, verbose_name=b'Status')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Approval Remarks')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name=b'Last Edit Date')),
                ('approval_submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_by_complete', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approving_agreement_complete', to=settings.AUTH_USER_MODEL)),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checking_complete', to=settings.AUTH_USER_MODEL)),
                ('community', models.ManyToManyField(blank=True, to=b'activitydb.Community')),
                ('estimated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estimating_complete', to=settings.AUTH_USER_MODEL)),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Office')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complete', to='activitydb.Program')),
                ('project_agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing_complete', to=settings.AUTH_USER_MODEL)),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Account Code')),
                ('agency_cost', models.CharField(blank=True, help_text='In USD', max_length=255, null=True)),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Sub Code')),
                ('local_agency_cost', models.CharField(blank=True, help_text='Total portion of cost for your agency', max_length=255, null=True, verbose_name='Organization Total in Local Currency')),
                ('local_total_cost', models.CharField(blank=True, help_text='In Local Currency', max_length=255, null=True, verbose_name='Total in Local Currency')),
            ],
            options={
                'ordering': ('create_date',),
                'verbose_name_plural': 'Activity Completions',
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=135, verbose_name=b'Type of Activity')),
                ('description', models.CharField(max_length=765)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProjectTypeOther',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=135, verbose_name=b'Type of Activity')),
                ('description', models.CharField(max_length=765)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 1')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.Country')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(blank=True, max_length=255, verbose_name=b'Sector Name')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('sector',),
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=135, verbose_name=b'Name of Document')),
                ('documentation_type', models.CharField(max_length=135, verbose_name=b'Type (File or URL)')),
                ('description', models.CharField(max_length=765)),
                ('file_field', models.FileField(blank=True, null=True, upload_to=b'uploads')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TrainingAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_name', models.CharField(max_length=255)),
                ('implementer', models.CharField(blank=True, max_length=255, null=True)),
                ('reporting_period', models.CharField(blank=True, max_length=255, null=True)),
                ('total_participants', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('community', models.CharField(blank=True, max_length=255, null=True)),
                ('training_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.CharField(blank=True, max_length=255, null=True)),
                ('end_date', models.CharField(blank=True, max_length=255, null=True)),
                ('trainer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('trainer_contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('form_filled_by', models.CharField(blank=True, max_length=255, null=True)),
                ('form_filled_by_contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('total_male', models.IntegerField(blank=True, null=True)),
                ('total_female', models.IntegerField(blank=True, null=True)),
                ('total_age_0_14_male', models.IntegerField(blank=True, null=True)),
                ('total_age_0_14_female', models.IntegerField(blank=True, null=True)),
                ('total_age_15_24_male', models.IntegerField(blank=True, null=True)),
                ('total_age_15_24_female', models.IntegerField(blank=True, null=True)),
                ('total_age_25_59_male', models.IntegerField(blank=True, null=True)),
                ('total_age_25_59_female', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Program')),
            ],
            options={
                'ordering': ('training_name',),
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 4')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.District')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='project_proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectProposal'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='project_type',
            field=models.ForeignKey(blank=True, help_text=b'Please refer to Form 05 - Project Progress Summary', max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectType'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='project_type_other',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectTypeOther'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Sector'),
        ),
        migrations.AddField(
            model_name='programdashboard',
            name='project_agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement'),
        ),
        migrations.AddField(
            model_name='programdashboard',
            name='project_completion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectComplete'),
        ),
        migrations.AddField(
            model_name='program',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Sector'),
        ),
        migrations.AddField(
            model_name='office',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.Province'),
        ),
        migrations.AddField(
            model_name='monitor',
            name='agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement'),
        ),
        migrations.AddField(
            model_name='monitor',
            name='complete',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectComplete'),
        ),
        migrations.AddField(
            model_name='mergemap',
            name='project_agreement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement'),
        ),
        migrations.AddField(
            model_name='mergemap',
            name='project_completion',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectComplete'),
        ),
        migrations.AddField(
            model_name='documentation',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Template'),
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.Province'),
        ),
        migrations.AddField(
            model_name='community',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.Country'),
        ),
        migrations.AddField(
            model_name='community',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.District'),
        ),
        migrations.AddField(
            model_name='community',
            name='filled_by',
            field=models.ForeignKey(blank=True, help_text='This is the originator', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comm_estimate', to='activitydb.TolaUser'),
        ),
        migrations.AddField(
            model_name='community',
            name='office',
            field=models.ForeignKey(default=b'1', on_delete=django.db.models.deletion.CASCADE, to='activitydb.Office'),
        ),
        migrations.AddField(
            model_name='community',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Province'),
        ),
        migrations.AddField(
            model_name='community',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProfileType'),
        ),
        migrations.AddField(
            model_name='budget',
            name='agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement'),
        ),
        migrations.AddField(
            model_name='budget',
            name='complete',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='activitydb.ProjectComplete'),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='training',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.TrainingAttendance'),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement'),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='complete',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectComplete'),
        ),
        migrations.AddField(
            model_name='approvalauthority',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Country'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='activity_code',
            field=models.CharField(blank=True, help_text=b'If applicable at this stage, please request Activity Code from MEL', max_length=255, null=True, verbose_name=b'Activity Code'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='community_mobilizer',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name=b'MC Community Mobilizer'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='community_mobilizer_contact',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name=b'MC Community Mobilizer Contact Number'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='community_rep',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Community Representative'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='community_rep_contact',
            field=models.CharField(blank=True, help_text=b'Can have mulitple contact numbers', max_length=255, null=True, verbose_name=b'Community Representative Contact'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='has_rej_letter',
            field=models.BooleanField(default=False, help_text=b'If yes attach copy', verbose_name=b'If Rejected: Rejection Letter Sent?'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='rejection_letter',
            field=models.FileField(blank=True, null=True, upload_to=b'uploads', verbose_name=b'Rejection Letter'),
        ),
        migrations.AlterModelOptions(
            name='projectagreement',
            options={'ordering': ('create_date',), 'permissions': (('can_approve', 'Can approve agreement'),)},
        ),
        migrations.RemoveField(
            model_name='programdashboard',
            name='project_proposal_count',
        ),
        migrations.RemoveField(
            model_name='programdashboard',
            name='project_proposal_count_approved',
        ),
        migrations.RemoveField(
            model_name='projectagreement',
            name='project_proposal',
        ),
        migrations.AddField(
            model_name='trainingattendance',
            name='project_agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement'),
        ),
        migrations.AlterField(
            model_name='documentation',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement'),
        ),
        migrations.RemoveField(
            model_name='programdashboard',
            name='project_agreement_count',
        ),
        migrations.RemoveField(
            model_name='programdashboard',
            name='project_agreement_count_approved',
        ),
        migrations.RemoveField(
            model_name='programdashboard',
            name='project_completion_count',
        ),
        migrations.RemoveField(
            model_name='programdashboard',
            name='project_completion_count_approved',
        ),
        migrations.AlterField(
            model_name='community',
            name='literacy_rate',
            field=models.IntegerField(blank=True, null=True, verbose_name='Literacy Rate (%)'),
        ),
        migrations.AlterField(
            model_name='community',
            name='literate_females',
            field=models.IntegerField(blank=True, null=True, verbose_name='Number of Literate Females'),
        ),
        migrations.AlterField(
            model_name='community',
            name='literate_males',
            field=models.IntegerField(blank=True, null=True, verbose_name='Number of Literate Males'),
        ),
        migrations.AlterField(
            model_name='community',
            name='total_literate_peoples',
            field=models.IntegerField(blank=True, null=True, verbose_name='Total Literate People'),
        ),
        migrations.AlterField(
            model_name='community',
            name='total_num_households',
            field=models.IntegerField(blank=True, null=True, verbose_name='Total # Households'),
        ),
        migrations.AlterField(
            model_name='community',
            name='village',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Village'),
        ),
        migrations.RemoveField(
            model_name='community',
            name='num_animals_population_owning',
        ),
        migrations.AddField(
            model_name='community',
            name='altitude',
            field=models.DecimalField(blank=True, decimal_places=14, max_digits=25, null=True, verbose_name='Altitude (in meters)'),
        ),
        migrations.AddField(
            model_name='community',
            name='location_verified_by',
            field=models.ForeignKey(blank=True, help_text='This should be GIS Manager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comm_gis', to='activitydb.TolaUser'),
        ),
        migrations.AddField(
            model_name='community',
            name='precision',
            field=models.DecimalField(blank=True, decimal_places=14, max_digits=25, null=True, verbose_name='Precision (in meters)'),
        ),
        migrations.AddField(
            model_name='community',
            name='total_female',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='community',
            name='total_male',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='community',
            name='animal_type',
            field=models.CharField(blank=True, help_text='List Animal Types', max_length=255, null=True, verbose_name='Animal Types'),
        ),
        migrations.AlterField(
            model_name='community',
            name='contact_number',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Number'),
        ),
        migrations.AlterField(
            model_name='community',
            name='latitude',
            field=models.DecimalField(blank=True, decimal_places=14, max_digits=25, null=True, verbose_name='Latitude (Decimal Coordinates)'),
        ),
        migrations.AlterField(
            model_name='community',
            name='longitude',
            field=models.DecimalField(blank=True, decimal_places=14, max_digits=25, null=True, verbose_name='Longitude (Decimal Coordinates)'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='community_proposal',
            field=models.FileField(blank=True, null=True, upload_to='uploads', verbose_name='Community Proposal'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='project_name',
            field=models.CharField(help_text='Please be specific in your name.  Consider that your Project Name includes WHO, WHAT, WHERE, HOW', max_length=255, verbose_name='Project Name'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agreement', to='activitydb.Program'),
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement')),
            ],
            options={
                'ordering': ('agreement',),
            },
        ),
        migrations.CreateModel(
            name='ChecklistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(default='Unnamed Item', max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('global_item', models.BooleanField(default=False)),
                ('checklist', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Checklist')),
                ('in_file', models.BooleanField(default=False)),
                ('not_applicable', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('item',),
            },
        ),
        migrations.RemoveField(
            model_name='projectagreement',
            name='capacity',
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='capacity',
            field=models.ManyToManyField(blank=True, to=b'activitydb.Capacity', verbose_name='Sustainability Plan'),
        ),
        migrations.RemoveField(
            model_name='projectagreement',
            name='evaluate',
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='evaluate',
            field=models.ManyToManyField(blank=True, to=b'activitydb.Evaluate'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='project_description',
            field=models.TextField(blank=True, help_text='Description must meet the Criteria.  Will translate description into three languages: English, Dari and Pashto', null=True, verbose_name='Project Description'),
        ),
        migrations.RemoveField(
            model_name='projectagreement',
            name='documentation_community_approval',
        ),
        migrations.RemoveField(
            model_name='projectagreement',
            name='documentation_government_approval',
        ),
        migrations.RemoveField(
            model_name='projectagreement',
            name='external_stakeholder_list',
        ),
        migrations.RemoveField(
            model_name='projectagreement',
            name='rejection_letter',
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='community_mobilizer',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='community_mobilizer_contact',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer Contact Number'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='effect_or_impact',
            field=models.TextField(blank=True, null=True, verbose_name='What is the anticipated Outcome or Goal?'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='justification_background',
            field=models.TextField(blank=True, null=True, verbose_name='General Background and Problem Statement'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='justification_description_community_selection',
            field=models.TextField(blank=True, null=True, verbose_name='Description of Stakeholder Selection Criteria'),
        ),
        migrations.RemoveField(
            model_name='projectagreement',
            name='mc_objectives',
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='me_reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing_me', to=settings.AUTH_USER_MODEL, verbose_name='M&E Reviewed by'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing', to=settings.AUTH_USER_MODEL, verbose_name='Field Verification By'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='reviewed_by_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Date Verified'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='exchange_rate',
            field=models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='exchange_rate_date',
            field=models.DateField(blank=True, help_text='Date of exchange rate', null=True),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='local_mc_estimated_budget',
            field=models.CharField(blank=True, help_text='Total portion of estimate for your agency', max_length=255, null=True, verbose_name='Estimated Organization Total in Local Currency'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='local_total_estimated_budget',
            field=models.CharField(blank=True, help_text='In Local Currency', max_length=255, null=True, verbose_name='Estimated Total in Local Currency'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='account_code',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Account Code'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='lin_code',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Sub Code'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='project_type',
            field=models.ForeignKey(blank=True, max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectType'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Sector'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='total_cost',
            field=models.CharField(blank=True, help_text='In USD', max_length=255, null=True, verbose_name='Estimated Budget for Organization'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='average_household_size',
            field=models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='beneficiary_type',
            field=models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='community_handover',
            field=models.BooleanField(default=None, help_text='Check box if it was completed', verbose_name='CommunityHandover/Sustainability Maintenance Plan'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='community_involvement',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Involvement'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='indirect_beneficiaries',
            field=models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='community_project_description',
            field=models.TextField(blank=True, help_text='Description must describe how the Community Proposal meets the project criteria', null=True, verbose_name='Describe the project you would like the program to consider'),
        ),
        migrations.CreateModel(
            name='TolaUser',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterField(
            model_name='approvalauthority',
            name='approval_user',
            field=models.ForeignKey(blank=True, help_text='User with Approval Authority', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auth_approving', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='community',
            name='approved_by',
            field=models.ForeignKey(blank=True, help_text='This is the Provincial Line Manager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comm_approving', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='approval_submitted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_by_agreement', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approving_agreement', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='checked_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checking', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='estimated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estimating', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='finance_reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finance_reviewing', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='me_reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing_me', to='activitydb.TolaUser', verbose_name='M&E Reviewed by'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing', to='activitydb.TolaUser', verbose_name='Field Verification By'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='approval_submitted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_by_complete', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approving_agreement_complete', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='checked_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checking_complete', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='estimated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estimating_complete', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing_complete', to='activitydb.TolaUser'),
        ),
        migrations.CreateModel(
            name='AdminLevelThree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 3')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.District')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='documentation',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Program'),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City/Town')),
                ('address', models.TextField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.Country')),
            ],
            options={
                'ordering': ('country', 'name', 'title'),
                'verbose_name_plural': 'Contact',
            },
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Stakholder/Organization Name')),
                ('stakeholder_register', models.BooleanField(verbose_name='Has this partner been added to stakeholder register?')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('contact', models.ManyToManyField(blank=True, max_length=255, to=b'activitydb.Contact')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.Country')),
                ('formal_relationship_document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relationship_document', to='activitydb.Documentation', verbose_name='Formal Written Description of Relationship')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Sector')),
            ],
            options={
                'ordering': ('country', 'name', 'type'),
                'verbose_name_plural': 'Stakeholders',
            },
        ),
        migrations.CreateModel(
            name='StakeholderType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Stakeholder Type')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.Country')),
            ],
            options={
                'ordering': ('country', 'name'),
                'verbose_name_plural': 'Stakeholder Types',
            },
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.StakeholderType'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='vetting_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vetting_document', to='activitydb.Documentation', verbose_name='Vetting/ due diligence statement'),
        ),
        migrations.RenameModel(
            old_name='Community',
            new_name='SiteProfile',
        ),
        migrations.AlterModelOptions(
            name='stakeholdertype',
            options={'ordering': ('name',), 'verbose_name_plural': 'Stakeholder Types'},
        ),
        migrations.RenameField(
            model_name='projectagreement',
            old_name='community',
            new_name='site',
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='site',
            field=models.ManyToManyField(blank=True, to=b'activitydb.SiteProfile'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='stakeholder',
            field=models.ManyToManyField(blank=True, to=b'activitydb.Stakeholder'),
        ),
        migrations.RenameField(
            model_name='projectcomplete',
            old_name='community',
            new_name='site',
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='site',
            field=models.ManyToManyField(blank=True, to=b'activitydb.SiteProfile'),
        ),
        migrations.AlterModelOptions(
            name='siteprofile',
            options={'ordering': ('name',), 'verbose_name_plural': 'Site Profiles'},
        ),
        migrations.RemoveField(
            model_name='stakeholdertype',
            name='country',
        ),
        migrations.AddField(
            model_name='checklist',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Country'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='name',
            field=models.CharField(blank=True, default='Checklist', max_length=255, null=True),
        ),
        migrations.RemoveField(
            model_name='projectagreement',
            name='program_objectives',
        ),
        migrations.RemoveField(
            model_name='siteprofile',
            name='altitude',
        ),
        migrations.RemoveField(
            model_name='siteprofile',
            name='approval',
        ),
        migrations.RemoveField(
            model_name='siteprofile',
            name='distance_district_capital',
        ),
        migrations.RemoveField(
            model_name='siteprofile',
            name='distance_field_office',
        ),
        migrations.RemoveField(
            model_name='siteprofile',
            name='distance_site_camp',
        ),
        migrations.RemoveField(
            model_name='siteprofile',
            name='existing_village',
        ),
        migrations.RemoveField(
            model_name='siteprofile',
            name='existing_village_descr',
        ),
        migrations.RemoveField(
            model_name='siteprofile',
            name='precision',
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='info_source',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Data Source'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='name',
            field=models.CharField(default=datetime.datetime(2015, 10, 27, 21, 6, 36, 467369, tzinfo=utc), max_length=255, verbose_name='Site Name'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='village',
            field=models.CharField(blank=True, help_text='Village', max_length=255, null=True, verbose_name='Administrative Level 3'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='project_description',
            field=models.TextField(blank=True, help_text='Description must meet the Criteria.  Will translate description into three languages: English, Dari and Pashto)', null=True, verbose_name='Project Description'),
        ),
        migrations.AlterField(
            model_name='stakeholder',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Stakeholder/Organization Name'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='cfw_estimate_cost_materials',
            field=models.CharField(blank=True, max_length='255', null=True, verbose_name='Estimated Total Cost of Materials'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='cfw_estimate_female',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Laborers'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='cfw_estimate_male',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Laborers'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='cfw_estimate_person_days',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Person Days'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='cfw_estimate_project_days',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Project Days'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='cfw_estimate_total',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # of Laborers'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='cfw_estimate_wages_budgeted',
            field=models.CharField(blank=True, max_length='255', null=True, verbose_name='Estimated Wages Budgeted'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='distribution_estimate',
            field=models.CharField(blank=True, max_length='255', null=True, verbose_name='Estimated # of Items Distributed'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='distribution_type',
            field=models.CharField(blank=True, max_length='255', null=True, verbose_name='Type of Items Distributed'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='distribution_uom',
            field=models.CharField(blank=True, max_length='255', null=True, verbose_name='Unit of Measure'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='estimate_female_trained',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Trained'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='estimate_male_trained',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Trained'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='estimate_total_trained',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # Trained'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='estimate_trainings',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Trainings Conducted'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='avg_landholding_size',
            field=models.DecimalField(blank=True, decimal_places=14, help_text='In hectares/jeribs', max_digits=25, null=True, verbose_name='Average Landholding Size'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='populations_owning_land',
            field=models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Land'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='literacy_rate',
            field=models.IntegerField(blank=True, help_text='%', null=True, verbose_name='Literacy Rate (%)'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='literate_females',
            field=models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Females'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='literate_males',
            field=models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Males'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='estimated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estimating', to='activitydb.TolaUser', verbose_name='Originated By'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='estimated_by_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Date Originated'),
        ),
        migrations.RenameField(
            model_name='siteprofile',
            old_name='community_leader',
            new_name='contact_leader',
        ),
        migrations.RemoveField(
            model_name='siteprofile',
            name='populations_owning_livestock',
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='households_owning_livestock',
            field=models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Livestock'),
        ),
        migrations.CreateModel(
            name='FormEnabled',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Country')),
            ],
            options={
                'ordering': ('country', 'agreement'),
            },
        ),
        migrations.CreateModel(
            name='FormLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Form Name')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name', 'create_date'),
            },
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.District', verbose_name='Administrative Level 2'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Province', verbose_name='Administrative Level 1'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='village',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Administrative Level 3'),
        ),
        migrations.AddField(
            model_name='formenabled',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activitydb.FormLibrary'),
        ),
        migrations.AlterField(
            model_name='stakeholder',
            name='formal_relationship_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relationship_document', to='activitydb.Documentation', verbose_name='Formal Written Description of Relationship'),
        ),
        migrations.CreateModel(
            name='CustomDashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboard_name', models.CharField(blank=True, max_length=255, verbose_name='Custom Dashboard Name')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('dashboard_description', models.TextField(blank=True, help_text='What does this custom dashboard displays to the user?', null=True, verbose_name='Brief Description')),
                ('is_public', models.BooleanField(default=False, verbose_name='External Public Dashboard')),
            ],
            options={
                'ordering': ('dashboard_name',),
            },
        ),
        migrations.AddField(
            model_name='program',
            name='dashboard_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.CustomDashboard'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='dashboard_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.CustomDashboard'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='dashboard_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.CustomDashboard'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='approval',
            field=models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval'),
        ),
        migrations.RenameField(
            model_name='beneficiary',
            old_name='community',
            new_name='site',
        ),
        migrations.AlterField(
            model_name='country',
            name='description',
            field=models.TextField(blank=True, max_length=765, verbose_name='Description/Notes'),
        ),
        migrations.AlterField(
            model_name='program',
            name='description',
            field=models.TextField(blank=True, max_length=765, null=True, verbose_name='Program Description'),
        ),
        migrations.CreateModel(
            name='LandType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classify_land', models.CharField(blank=True, help_text='Rural, Urban, Peri-Urban', max_length=100, verbose_name='Land Classification')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('classify_land',),
            },
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='actual_cost_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='quality_assured',
            field=models.TextField(blank=True, max_length=755, null=True, verbose_name='How was quality assured for this project'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='approval',
            field=models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='actual_budget',
            field=models.CharField(blank=True, help_text='What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', max_length=255, null=True, verbose_name='Actual Cost'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='agency_cost',
            field=models.CharField(blank=True, help_text='In USD', max_length=255, null=True, verbose_name='Actual Cost for Organization'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='approval',
            field=models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='budget_variance',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Budget versus Actual variance'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='capacity_built',
            field=models.TextField(blank=True, max_length=755, null=True, verbose_name='Describe ow sustainability was ensured for this project?'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='estimated_budget',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Budget'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='local_agency_cost',
            field=models.CharField(blank=True, help_text='In Local Currency', max_length=255, null=True, verbose_name='Actual Cost for Organization'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='local_total_cost',
            field=models.CharField(blank=True, help_text='In Local Currency', max_length=255, null=True, verbose_name='Actual Cost'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='classify_land',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.LandType'),
        ),
        migrations.AlterModelOptions(
            name='projectcomplete',
            options={'ordering': ('create_date',), 'verbose_name_plural': 'Project Completions'},
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='progress_against_targets',
            field=models.IntegerField(blank=True, null=True, verbose_name='Progress against Targets (%)'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='mc_estimated_budget',
            field=models.CharField(blank=True, help_text='In USD', max_length=255, null=True, verbose_name='Organizations portion of Project Budget'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='total_estimated_budget',
            field=models.CharField(blank=True, help_text='In USD', max_length=255, null=True, verbose_name='Total Project Budget'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='local_mc_estimated_budget',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total portion of estimate for your agency', max_digits=12, verbose_name='Estimated Organization Total in Local Currency'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='local_total_estimated_budget',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Estimated Total in Local Currency'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='mc_estimated_budget',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Organizations portion of Project Budget'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='total_estimated_budget',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Total Project Budget'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='actual_budget',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', max_digits=12, verbose_name='Actual Cost'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='agency_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Actual Cost for Organization'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='estimated_budget',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Estimated Budget'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='local_agency_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost for Organization'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='local_total_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='total_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Estimated Budget for Organization'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='avg_household_size',
            field=models.DecimalField(decimal_places=14, default=Decimal('0.00'), max_digits=25, verbose_name='Average Household Size'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='avg_landholding_size',
            field=models.DecimalField(decimal_places=14, default=Decimal('0.00'), help_text='In hectares/jeribs', max_digits=25, verbose_name='Average Landholding Size'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='latitude',
            field=models.DecimalField(decimal_places=14, default=Decimal('0.00'), max_digits=25, verbose_name='Latitude (Decimal Coordinates)'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='longitude',
            field=models.DecimalField(decimal_places=14, default=Decimal('0.00'), max_digits=25, verbose_name='Longitude (Decimal Coordinates)'),
        ),
        migrations.AlterModelOptions(
            name='program',
            options={'ordering': ('name',)},
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='actual_budget',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', max_digits=20, verbose_name='Actual Cost'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='local_mc_estimated_budget',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Total portion of estimate for your agency', max_digits=12, verbose_name='Estimated Organization Total in Local Currency'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='local_total_estimated_budget',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Estimated Total in Local Currency'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='mc_estimated_budget',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Organizations portion of Project Budget'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='total_estimated_budget',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Total Project Budget'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='actual_budget',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', max_digits=20, verbose_name='Actual Cost'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='agency_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Actual Cost for Organization'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='estimated_budget',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Estimated Budget'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='local_agency_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost for Organization'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='local_total_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='total_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Estimated Budget for Organization'),
        ),
        migrations.AlterField(
            model_name='approvalauthority',
            name='fund',
            field=models.CharField(blank=True, max_length='255', null=True, verbose_name='Fund'),
        ),
        migrations.AddField(
            model_name='program',
            name='budget_check',
            field=models.BooleanField(default=False, verbose_name='Enable Approval Authority Matrix'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='project_agreement',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectAgreement'),
        ),
        migrations.AlterField(
            model_name='district',
            name='name',
            field=models.CharField(blank=True, max_length=255, verbose_name='Admin Level 2'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='risks_assumptions',
            field=models.TextField(blank=True, null=True, verbose_name='Risks and Assumptions'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='admin_level_three',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.AdminLevelThree', verbose_name='Administrative Level 3'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='village',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Administrative Level 4'),
        ),
        migrations.DeleteModel(
            name='TolaUser',
        ),
        migrations.CreateModel(
            name='TolaUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[('mr', 'Mr.'), ('mrs', 'Mrs.'), ('ms', 'Ms.')], max_length=3, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Given Name')),
                ('employee_number', models.IntegerField(blank=True, null=True, verbose_name='Employee Number')),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('countries', models.ManyToManyField(blank=True, related_name='countries', to=b'activitydb.Country', verbose_name='Accessible Countries')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.Country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tola_user', to=settings.AUTH_USER_MODEL)),
                ('tables_api_token', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='village',
            name='admin_3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.AdminLevelThree'),
        ),
        migrations.AlterField(
            model_name='village',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.District'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='approval',
            field=models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stake_approving', to='activitydb.TolaUser'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='filled_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stake_filled', to='activitydb.TolaUser'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='latitude',
            field=models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Latitude (Decimal Coordinates)'),
        ),
        migrations.AlterField(
            model_name='siteprofile',
            name='longitude',
            field=models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Longitude (Decimal Coordinates)'),
        ),
        migrations.RemoveField(
            model_name='program',
            name='sector',
        ),
        migrations.AddField(
            model_name='program',
            name='sector',
            field=models.ManyToManyField(blank=True, to=b'activitydb.Sector'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='activity_code',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity Code'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='estimated_num_direct_beneficiaries',
            field=models.CharField(blank=True, help_text="Please provide achievable estimates as we will use these as our 'Targets'", max_length=255, null=True, verbose_name='Estimated number of direct beneficiaries'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='project_description',
            field=models.TextField(blank=True, null=True, verbose_name='Project Description'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='project_type',
            field=models.ForeignKey(blank=True, max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.ProjectType'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='staff_responsible',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff Responsible'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='actual_start_date',
            field=models.DateTimeField(blank=True, help_text='Imported from Project Agreement', null=True),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='capacity_built',
            field=models.TextField(blank=True, max_length=755, null=True, verbose_name='Describe how sustainability was ensured for this project?'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='expected_duration',
            field=models.CharField(blank=True, help_text='Imported from Project Agreement', max_length=255, null=True, verbose_name='Expected Duration'),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='expected_end_date',
            field=models.DateTimeField(blank=True, help_text='Imported Project Agreement', null=True),
        ),
        migrations.AlterField(
            model_name='projectcomplete',
            name='expected_start_date',
            field=models.DateTimeField(blank=True, help_text='Imported Project Agreement', null=True),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='lin_code',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code'),
        ),
        migrations.AddField(
            model_name='program',
            name='user_access',
            field=models.ManyToManyField(blank=True, to=b'activitydb.TolaUser'),
        ),
        migrations.CreateModel(
            name='HistoricalBudget',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('contributor', models.CharField(blank=True, max_length=135, null=True)),
                ('description_of_contribution', models.CharField(blank=True, max_length=255, null=True)),
                ('proposed_value', models.IntegerField(blank=True, default=0, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('agreement', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.ProjectAgreement')),
                ('complete', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.ProjectComplete')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical budget',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProjectAgreement',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_of_request', models.DateTimeField(blank=True, null=True, verbose_name='Date of Request')),
                ('project_name', models.CharField(help_text='Please be specific in your name.  Consider that your Project Name includes WHO, WHAT, WHERE, HOW', max_length=255, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, help_text='This should come directly from the activities listed in the Logframe', max_length=255, null=True, verbose_name='Project Activity')),
                ('project_description', models.TextField(blank=True, null=True, verbose_name='Project Description')),
                ('community_rep', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Representative')),
                ('community_rep_contact', models.CharField(blank=True, help_text='Can have mulitple contact numbers', max_length=255, null=True, verbose_name='Community Representative Contact')),
                ('community_mobilizer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer')),
                ('community_mobilizer_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer Contact Number')),
                ('community_proposal', models.TextField(blank=True, max_length=100, null=True, verbose_name='Community Proposal')),
                ('has_rej_letter', models.BooleanField(default=False, help_text='If yes attach copy', verbose_name='If Rejected: Rejection Letter Sent?')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity Code')),
                ('cod_num', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project COD #')),
                ('project_design', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity design for')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Account Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code')),
                ('staff_responsible', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff Responsible')),
                ('partners', models.BooleanField(default=0, verbose_name='Are there partners involved?')),
                ('name_of_partners', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Partners')),
                ('effect_or_impact', models.TextField(blank=True, null=True, verbose_name='What is the anticipated Outcome or Goal?')),
                ('expected_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected starting date')),
                ('expected_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected ending date')),
                ('expected_duration', models.CharField(blank=True, help_text='[MONTHS]/[DAYS]', max_length=255, null=True, verbose_name='Expected duration')),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('estimated_num_direct_beneficiaries', models.CharField(blank=True, help_text="Please provide achievable estimates as we will use these as our 'Targets'", max_length=255, null=True, verbose_name='Estimated number of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('estimated_num_indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Total Project Budget')),
                ('mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Organizations portion of Project Budget')),
                ('local_total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Estimated Total in Local Currency')),
                ('local_mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Total portion of estimate for your agency', max_digits=12, verbose_name='Estimated Organization Total in Local Currency')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('estimate_male_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Trained')),
                ('estimate_female_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Trained')),
                ('estimate_total_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # Trained')),
                ('estimate_trainings', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Trainings Conducted')),
                ('distribution_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of Items Distributed')),
                ('distribution_uom', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit of Measure')),
                ('distribution_estimate', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated # of Items Distributed')),
                ('cfw_estimate_male', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Laborers')),
                ('cfw_estimate_female', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Laborers')),
                ('cfw_estimate_total', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # of Laborers')),
                ('cfw_estimate_project_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Project Days')),
                ('cfw_estimate_person_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Person Days')),
                ('cfw_estimate_cost_materials', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Total Cost of Materials')),
                ('cfw_estimate_wages_budgeted', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Wages Budgeted')),
                ('estimation_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Originated')),
                ('checked_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Checked')),
                ('reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Verified')),
                ('finance_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by Finance')),
                ('me_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by M&E')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approved_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Approved')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('justification_background', models.TextField(blank=True, null=True, verbose_name='General Background and Problem Statement')),
                ('risks_assumptions', models.TextField(blank=True, null=True, verbose_name='Risks and Assumptions')),
                ('justification_description_community_selection', models.TextField(blank=True, null=True, verbose_name='Description of Stakeholder Selection Criteria')),
                ('description_of_project_activities', models.TextField(blank=True, null=True)),
                ('description_of_government_involvement', models.TextField(blank=True, null=True)),
                ('description_of_community_involvement', models.TextField(blank=True, null=True)),
                ('community_project_description', models.TextField(blank=True, help_text='Description must describe how the Community Proposal meets the project criteria', null=True, verbose_name='Describe the project you would like the program to consider')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approval_submitted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('checked_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('dashboard_name', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.CustomDashboard')),
                ('estimated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('finance_reviewed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('me_reviewed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('office', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.Office')),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.Program')),
                ('project_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.ProjectType')),
                ('project_type_other', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.ProjectTypeOther')),
                ('reviewed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('sector', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.Sector')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical project agreement',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProjectComplete',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity Code')),
                ('project_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Activity')),
                ('expected_start_date', models.DateTimeField(blank=True, help_text='Imported Project Agreement', null=True)),
                ('expected_end_date', models.DateTimeField(blank=True, help_text='Imported Project Agreement', null=True)),
                ('expected_duration', models.CharField(blank=True, help_text='Imported from Project Agreement', max_length=255, null=True, verbose_name='Expected Duration')),
                ('actual_start_date', models.DateTimeField(blank=True, help_text='Imported from Project Agreement', null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('on_time', models.BooleanField(default=None)),
                ('no_explanation', models.TextField(blank=True, null=True, verbose_name='If not on time explain delay')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Account Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Sub Code')),
                ('estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Estimated Budget')),
                ('actual_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', max_digits=20, verbose_name='Actual Cost')),
                ('actual_cost_date', models.DateTimeField(blank=True, null=True)),
                ('budget_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Budget versus Actual variance')),
                ('explanation_of_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Explanation of variance')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Estimated Budget for Organization')),
                ('agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('local_total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost')),
                ('local_agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('direct_beneficiaries', models.CharField(blank=True, max_length=255, null=True, verbose_name='Actual Direct Beneficiaries')),
                ('jobs_created', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Jobs Created')),
                ('jobs_part_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Part Time Jobs')),
                ('jobs_full_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Time Jobs')),
                ('progress_against_targets', models.IntegerField(blank=True, null=True, verbose_name='Progress against Targets (%)')),
                ('government_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Government Involvement')),
                ('community_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Involvement')),
                ('community_handover', models.BooleanField(default=None, help_text='Check box if it was completed', verbose_name='CommunityHandover/Sustainability Maintenance Plan')),
                ('capacity_built', models.TextField(blank=True, max_length=755, null=True, verbose_name='Describe how sustainability was ensured for this project?')),
                ('quality_assured', models.TextField(blank=True, max_length=755, null=True, verbose_name='How was quality assured for this project')),
                ('issues_and_challenges', models.TextField(blank=True, null=True, verbose_name='List any issues or challenges faced (include reasons for delays)')),
                ('lessons_learned', models.TextField(blank=True, null=True, verbose_name='Lessons learned')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approval_submitted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('checked_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('dashboard_name', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.CustomDashboard')),
                ('estimated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('office', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.Office')),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.Program')),
                ('project_agreement', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.ProjectAgreement')),
                ('project_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.ProjectType')),
                ('reviewed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('sector', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.Sector')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical project complete',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSiteProfile',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Site Name')),
                ('contact_leader', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Name')),
                ('date_of_firstcontact', models.DateTimeField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Number')),
                ('num_members', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Members')),
                ('info_source', models.CharField(blank=True, max_length=255, null=True, verbose_name='Data Source')),
                ('total_num_households', models.IntegerField(blank=True, null=True, verbose_name='Total # Households')),
                ('avg_household_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), max_digits=25, verbose_name='Average Household Size')),
                ('male_0_14', models.IntegerField(blank=True, null=True, verbose_name='Male age 0-14')),
                ('female_0_14', models.IntegerField(blank=True, null=True, verbose_name='Female age 0-14')),
                ('male_15_24', models.IntegerField(blank=True, null=True, verbose_name='Male age 15-24 ')),
                ('female_15_24', models.IntegerField(blank=True, null=True, verbose_name='Female age 15-24')),
                ('male_25_59', models.IntegerField(blank=True, null=True, verbose_name='Male age 25-59')),
                ('female_25_59', models.IntegerField(blank=True, null=True, verbose_name='Female age 25-59')),
                ('male_over_60', models.IntegerField(blank=True, null=True, verbose_name='Male Over 60')),
                ('female_over_60', models.IntegerField(blank=True, null=True, verbose_name='Female Over 60')),
                ('total_population', models.IntegerField(blank=True, null=True)),
                ('total_male', models.IntegerField(blank=True, null=True)),
                ('total_female', models.IntegerField(blank=True, null=True)),
                ('total_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Land')),
                ('total_agricultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Agricultural Land')),
                ('total_rainfed_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Rain-fed Land')),
                ('total_horticultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Horticultural Land')),
                ('total_literate_peoples', models.IntegerField(blank=True, null=True, verbose_name='Total Literate People')),
                ('literate_males', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Males')),
                ('literate_females', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Females')),
                ('literacy_rate', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='Literacy Rate (%)')),
                ('populations_owning_land', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Land')),
                ('avg_landholding_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), help_text='In hectares/jeribs', max_digits=25, verbose_name='Average Landholding Size')),
                ('households_owning_livestock', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Livestock')),
                ('animal_type', models.CharField(blank=True, help_text='List Animal Types', max_length=255, null=True, verbose_name='Animal Types')),
                ('village', models.CharField(blank=True, max_length=255, null=True, verbose_name='Administrative Level 4')),
                ('latitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Latitude (Decimal Coordinates)')),
                ('longitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Longitude (Decimal Coordinates)')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('admin_level_three', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.AdminLevelThree')),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('classify_land', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.LandType')),
                ('country', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.Country')),
                ('district', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.District')),
                ('filled_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location_verified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.TolaUser')),
                ('office', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.Office')),
                ('province', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.Province')),
                ('type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='activitydb.ProfileType')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical site profile',
            },
        ),
        migrations.CreateModel(
            name='TolaSites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_name', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_url', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy_disclaimer', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
                ('tola_tables_token', models.CharField(blank=True, max_length=255, null=True)),
                ('tola_tables_url', models.CharField(blank=True, max_length=255, null=True)),
                ('tola_tables_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='tolauser',
            name='privacy_disclaimer_accepted',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='approvalauthority',
            name='fund',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='cfw_estimate_cost_materials',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Total Cost of Materials'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='cfw_estimate_wages_budgeted',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Wages Budgeted'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='distribution_estimate',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated # of Items Distributed'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='distribution_type',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of Items Distributed'),
        ),
        migrations.AlterField(
            model_name='projectagreement',
            name='distribution_uom',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit of Measure'),
        ),
        migrations.AlterModelOptions(
            name='benchmarks',
            options={'ordering': ('description',), 'verbose_name_plural': 'Project Components'},
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='actual_end_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='actual_start_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='budget',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimated Budget'),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='cost',
            field=models.IntegerField(blank=True, null=True, verbose_name='Actual Cost'),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='est_end_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='est_start_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='activitydb.SiteProfile'),
        ),
        migrations.RenameField(
            model_name='tolauser',
            old_name='created',
            new_name='create_date',
        ),
        migrations.RenameField(
            model_name='tolauser',
            old_name='updated',
            new_name='edit_date',
        ),
    ]
